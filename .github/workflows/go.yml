name: Build Docker Image and Executables
on:
  push:
    tags:
      - '*'
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Build
      run: go build
    - name: Extract version from go exe
      run: |
        IMAGE_NAME="$(./slidev-dkr version --docker)"
        VERSION=$(./slidev-dkr version --docker | cut -d ':' -f 2)
        echo "Extracted image name: $IMAGE_NAME"
        echo "Version: $VERSION"
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV   
        echo "VERSION=$VERSION" >> $GITHUB_ENV   


    - name: Build for Windows
      run: |
        GOOS=windows GOARCH=amd64 go build -o slidev-dkr-windows.exe

    - name: Build for Linux
      run: |
        GOOS=linux GOARCH=amd64 go build -o slidev-dkr-linux

    - name: Check if image exists
      id: check_image
      run: |
        if docker manifest inspect $IMAGE_NAME > /dev/null 2>&1; then
          echo "IMAGE_EXISTS=true" >> $GITHUB_ENV
        else
          echo "IMAGE_EXISTS=false" >> $GITHUB_ENV
        fi
      env:
        IMAGE_NAME: ${{ env.IMAGE_NAME }}

    - name: Build and push
      if: env.IMAGE_EXISTS == 'false'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.IMAGE_NAME }}

    - name: Pull image
      if: env.IMAGE_EXISTS == 'true'
      run: docker pull ${{ env.IMAGE_NAME }}
      
    - name: Save Docker image
      run: docker save $IMAGE_NAME | zstd -10 -T0 - > image/slidev.tar.zst  
      env:
        IMAGE_NAME: ${{ env.IMAGE_NAME }}


    - name: Build for Windows
      run: |
        GOOS=windows GOARCH=amd64 go build -o slidev-dkr-windows-embed.exe

    - name: Build for Linux
      run: |
        GOOS=linux GOARCH=amd64 go build -o slidev-dkr-linux-embed

    - uses: ncipollo/release-action@v1
      with:
        artifacts: "slidev-dkr-windows-embed.exe, slidev-dkr-windows.exe, slidev-dkr-linux-embed, slidev-dkr-linux"
        omitBody: true
        tag: ${{ env.VERSION }}          
        commit: "main"
    

        